package ventanas;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.Random;
import static tarea3.Metodos.calcularCosto;
import static tarea3.Metodos.extraerArray;
import static tarea3.Metodos.imprimirArreglo;
import static tarea3.Metodos.imprimirMatriz;
import static tarea3.Metodos.obtenerIndex;
import static tarea3.Metodos.obtenerMin;
import static tarea3.Metodos.permutarSecuencia;
import static tarea3.Metodos.randomArray;
/**
 *
 * @author Nacho
 */
public class Cruzamiento extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Cruzamiento() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/icono.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonSalir = new javax.swing.JButton();
        jLabelTamtor = new javax.swing.JLabel();
        jLabelDescripcion = new javax.swing.JLabel();
        jButtonAceptar = new javax.swing.JButton();
        jTextFieldTam = new javax.swing.JTextField();
        jTextPerm = new javax.swing.JTextField();
        jLabelNumperm = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jButtonVolver = new javax.swing.JButton();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonSalir.setBackground(new java.awt.Color(0, 0, 102));
        jButtonSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSalir.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        jLabelTamtor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTamtor.setText("Tamaño del torneo");
        getContentPane().add(jLabelTamtor, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 160, 20));

        jLabelDescripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelDescripcion.setText("<html>\nDescripción\n<br>\n<em>Es un operador de cruce utilizado en Computación evolutiva. Consiste en elegir un subsegmento de uno de los progenitores y cruzarlos preservando el orden y la posición de la mayor cantidad de genes posible del otro manteniendo la coherencia.</em>\n<br>\n</html>");
        getContentPane().add(jLabelDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 400, 100));

        jButtonAceptar.setBackground(new java.awt.Color(0, 0, 102));
        jButtonAceptar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonAceptar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 410, 110, 40));
        getContentPane().add(jTextFieldTam, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, 50, -1));

        jTextPerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextPermActionPerformed(evt);
            }
        });
        getContentPane().add(jTextPerm, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, 50, -1));

        jLabelNumperm.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelNumperm.setText("Número de permutaciones");
        getContentPane().add(jLabelNumperm, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 160, 20));

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabelTitulo.setForeground(java.awt.Color.darkGray);
        jLabelTitulo.setText("<html>\n<center>Algoritmo de Crossover</center>\n<br>\n<center>Método: PMX</center>\n<br>\n</html>");
        getContentPane().add(jLabelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 390, 120));

        jButtonVolver.setBackground(new java.awt.Color(0, 0, 102));
        jButtonVolver.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonVolver.setForeground(new java.awt.Color(255, 255, 255));
        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 110, 40));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.png"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        Principal principal = new Principal();
        principal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        int perms = Integer.parseInt(jTextPerm.getText());
        int tamano = Integer.parseInt(jTextFieldTam.getText());
        int[] secuencia = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29};
        int[][] matriz = new int [perms][29];
        int[] costos = new int [perms];
        Random rand = new Random();
        //Crear matriz con cantidad de permutaciones pedidas y respectivo arreglo con sus costos.
        for(int i = 0; i < perms ; i++)
        {
            //Obtener una permutación distinta
            permutarSecuencia(secuencia);
            //Pasar secuencia a matriz
            for(int j = 0; j < 29 ; j++)
            {
                matriz[i][j] = secuencia[j];                
            }
            //Pasar el costo de la secuencia a un arreglo
            costos[i] = calcularCosto(secuencia);
        }
        System.out.println("Se imprime Matriz completa de perms: ");
        imprimirMatriz(matriz);
        System.out.println("Con sus respectivos Costos: ");
        imprimirArreglo(costos);
        //Definir matriz y arreglo auxiliares
        int[][] aux1 = new int [tamano][matriz[0].length];
        int[] aux2 = new int [tamano];
        int[] aux3 = new int [matriz[0].length];
        //Obtener orden con el resultado de la lotería
        int[] extraer = randomArray(tamano, matriz.length-1);
        for (int i = 0; i < tamano; i++)
        {
            int fila = extraer[i];
            //Extraer la fila que ordene el array aleatorio desde la matriz
            aux3 = extraerArray(fila,matriz);
            //Pasar la fila extraida a la matriz auxiliar 1
            for (int j = 0; j < matriz[0].length; j++)
            {
                aux1[i][j] = aux3[j];
            }
            //Aprovechar de pasar el costo de cada fila a un array
            aux2[i] = calcularCosto(aux3);
        }
        //Buscar ganador 
        int costoMin = obtenerMin(aux2);
        int index = obtenerIndex(costoMin, aux2);
        int[] winner = aux1[index];
        
        System.out.println("Imprimir loteria torneo: ");
        imprimirArreglo(extraer);
        System.out.println("Deberia imprimir matriz torneo: ");
        imprimirMatriz(aux1);
        System.out.println("Deberia imprimir costos torneo: ");
        imprimirArreglo(aux2);
        System.out.println("El costo minimo es:"+costoMin);
        System.out.println("El index ganador es: "+index);
        System.out.println("La permutación ganadora del torneo es: ");
        imprimirArreglo(winner);
        
        
        
        
        
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jTextPermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextPermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextPermActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cruzamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cruzamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cruzamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cruzamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cruzamiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelDescripcion;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelNumperm;
    private javax.swing.JLabel jLabelTamtor;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JTextField jTextFieldTam;
    private javax.swing.JTextField jTextPerm;
    // End of variables declaration//GEN-END:variables

    
}
